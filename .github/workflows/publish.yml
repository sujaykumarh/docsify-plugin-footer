# Build and Publish resources
# .github/workflows/publish.yml
name: "Build & Publish package"

on:
  release:
    types: [created]

jobs:

  # Generate dist
  dist:
    runs-on: ubuntu-latest

    steps:

      # Pull Source Code
      -
        name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Use nodejs
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      # Install npm packages
      - run: npm install

      # Setup env
      - run: echo ${{ env.RELEASE_VERSION }} >> Release.txt
      - run: sed -i -e 's/REL_VER_NUMBER/${{ env.RELEASE_VERSION }}/g' src/plugin.js
      - run: sed -i -e 's/REL_VER_NUMBER/${{ env.RELEASE_VERSION }}/g' src/plugin.css

      # dist setup
      - run: rm -rf dist/.git* # delete .git* files in dist
      - run: echo ARCHIVE="docsify-plugin-footer-${{ env.RELEASE_VERSION }}.zip" >> $GITHUB_ENV
      - run: mv LICENSE LICENSE.txt

        # Build for dist
      - run: npm run minify

      # Publish to npm
      - name: "ðŸš€ Publish to npm"
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"
          check-version: true

      # Publish to github npm
      - name: "ðŸš€ Publish to github npm"
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          access: "public"
          registry: "https://npm.pkg.github.com"
          check-version: true

      # package for release
      - name: "ðŸ“¦ zipping files"
        run: |
          zip -r ${{ env.ARCHIVE }} ./src ./dist LICENSE* package* *.config.js README.md

          unzip -l ${{ env.ARCHIVE }}

      - run: sha256sum ${{ env.ARCHIVE }} >> ${{ env.ARCHIVE }}.sha256
      - run: md5sum ${{ env.ARCHIVE }} >> ${{ env.ARCHIVE }}.md5

      # Publish release
      - name: ðŸš€ Publish to Github Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: false
          draft: false
          name: ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: |
            ${{ env.ARCHIVE }}
            ${{ env.ARCHIVE }}.sha256
            ${{ env.ARCHIVE }}.md5